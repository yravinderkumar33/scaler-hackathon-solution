{"version":3,"file":"main.js","mappings":"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","sources":["./angular/src/app/app-routing.module.ts","./angular/src/app/app.component.ts","./angular/src/app/app.component.html","./angular/src/app/app.module.ts","./angular/src/app/components/auth/auth.component.ts","./angular/src/app/components/auth/auth.component.html","./angular/src/app/components/commit-revisions/commit-revisions.component.html","./angular/src/app/components/commit-revisions/commit-revisions.component.ts","./angular/src/app/providers/tab-id.provider.ts","./angular/src/environments/environment.ts","./angular/src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { CommitRevisionsComponent } from './components/commit-revisions/commit-revisions.component';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    component: AuthComponent\n  },\n  {\n    path: 'revisions',\n    component: CommitRevisionsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    chrome.runtime.onMessage.addListener((message, sender, response) => {\n      const { type, payload } = message;\n      console.log(message);\n      response({ acknowledged: true });\n    })\n  }\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { CommitRevisionsComponent } from './components/commit-revisions/commit-revisions.component';\n\n@NgModule({\n  declarations: [AppComponent, AuthComponent, CommitRevisionsComponent],\n  imports: [BrowserModule, AppRoutingModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { TAB_ID } from 'src/app/providers/tab-id.provider';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor(@Inject(TAB_ID) readonly tabId: number) { }\n  ngOnInit(): void {\n  }\n\n  login() {\n    console.log({ tabId: this.tabId });\n    chrome.tabs.sendMessage(this.tabId, {\n      type: \"AUTHENTICATE\",\n      payload: {\n        success: true\n      },\n    });\n  }\n\n}\n","<div class=\"text-center\">\n    <main class=\"form-signin w-100 m-auto\">\n        <form>\n            <img class=\"mb-4\" src=\"/assets/github.png\" alt=\"\" width=\"72\" height=\"57\">\n            <h1 class=\"h3 mb-3 fw-normal\">Please sign in</h1>\n\n            <div class=\"form-floating mb-3\">\n                <input type=\"email\" class=\"form-control\" id=\"floatingInput\" placeholder=\"name@example.com\">\n                <label for=\"floatingInput\">Email address</label>\n            </div>\n            <div class=\"form-floating mb-3\">\n                <input type=\"password\" class=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\">\n                <label for=\"floatingPassword\">Password</label>\n            </div>\n\n            <div class=\"checkbox mb-3\">\n                <label>\n                    <input type=\"checkbox\" value=\"remember-me\"> Remember me\n                </label>\n            </div>\n            <button class=\"w-100 btn btn-lg btn-primary\" (click)=\"login()\">Sign in</button>\n        </form>\n    </main>\n</div>","<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Serial</th>\n            <th scope=\"col\">Revision</th>\n            <th scope=\"col\">Time Taken</th>\n            <th scope=\"col\">View</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let submission of data; let i = index\">\n            <th scope=\"row\">{{i}}</th>\n            <td>{{submission?.version}}</td>\n            <td>{{submission?.timeTaken}}</td>\n            <td><button type=\"button\" class=\"btn btn-outline-primary\">View</button></td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-commit-revisions',\n  templateUrl: './commit-revisions.component.html',\n  styleUrls: ['./commit-revisions.component.scss']\n})\nexport class CommitRevisionsComponent implements OnInit {\n\n  async getActiveTabURL() {\n    const tabs = await chrome.tabs.query({\n      currentWindow: true,\n      active: true\n    });\n\n    return tabs[0];\n  }\n\n  data = [\n    {\n      version: \"v1\",\n      timeTaken: \"10 Mins\"\n    },\n    {\n      version: \"v2\",\n      timeTaken: \"45 Mins\"\n    },\n    {\n      version: \"v3\",\n      timeTaken: \"15 Mins\"\n    },\n    {\n      version: \"v4\",\n      timeTaken: \"2 Mins\"\n    }\n  ]\n\n  constructor() { }\n\n  async fetchRevisions() {\n    const currentTab = await this.getActiveTabURL();\n    const currentUrl = currentTab.url;\n    const regex = /.*\\/class\\/(.*)\\/assignment\\/problems\\/(.*)\\/.*/;\n    const [, classId, problemId] = currentUrl.match(regex) || [];\n    if (classId && problemId) {\n      const key = `${classId}_${problemId}`\n      chrome.storage.sync.get([key], (data) => {\n        this.data = data[key] ? JSON.parse(data[key]) : [];;\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    // this.fetchRevisions();\n  }\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const TAB_ID = new InjectionToken<number>('CHROME_TAB_ID');\n","\nexport const environment = {\n  production: false\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { TAB_ID } from './app/providers/tab-id.provider';\n\nchrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n\n  if (environment.production) {\n    enableProdMode();\n  }\n\n  const { id: tabId } = [...tabs].pop();\n  // provides the current Tab ID so you can send messages to the content page\n  platformBrowserDynamic([{ provide: TAB_ID, useValue: tabId }])\n    .bootstrapModule(AppModule)\n    .catch(error => console.error(error));\n});\n"],"names":["i0","CommitRevisionsComponent","constructor","version","timeTaken","getActiveTabURL","tabs","chrome","query","currentWindow","active","fetchRevisions","currentTab","currentUrl","url","regex","classId","problemId","match","key","storage","sync","get","data","JSON","parse","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///"}